trigger:
- master

jobs:
- job: Build_GR_Windows_10_Deps
  timeoutInMinutes: 0

  pool:
    vmImage: 'vs2017-win2016'

  steps:

  - script: |
      echo Downloading and Configure Boost
      choco install -y wget
      cd $(Build.SourcesDirectory)
      wget https://downloads.sourceforge.net/project/boost/boost/1.70.0/boost_1_70_0.zip?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fboost%2Ffiles%2Fboost%2F1.70.0%2Fboost_1_70_0.zip%2Fdownload&ts=1580705417 -q -O "boost_1_70_0.zip"
      ren boost* boost_1_70_0.zip
      unzip -q boost_1_70_0.zip
      mkdir $(Build.SourcesDirectory)\boost_out
      SET OUTPUT="$(Build.SourcesDirectory)\boost_out"
      cd boost_1_70_0
      bootstrap.bat && b2 --build-type=complete --abbreviate-paths architecture=x86 address-model=64 install --prefix=%OUTPUT% -j2 && cd $(Build.SourcesDirectory) && 7z a -t7z boost.7z "%OUTPUT%"
    displayName: 'Build Boost'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)\boost.7z'
      ArtifactName: 'boost.7z'
      publishLocation: 'Container'
    displayName: 'Publish Boost Artifacts'

  - script: |
      echo Build UHD
      cd $(Build.SourcesDirectory)
      mkdir $(Build.SourcesDirectory)\uhd
      git clone https://github.com/EttusResearch/uhd.git uhd_build
      cd uhd_build\host
      mkdir build
      cd build
      call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
      cmake .. -DCMAKE_INSTALL_PREFIX=$(Build.SourcesDirectory)\uhd -DBOOST_ROOT=$(Build.SourcesDirectory)\boost_out
      make
      make install
      7z a -t7z uhd.7z $(Build.SourcesDirectory)\uhd
    displayName: 'Build UHD'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)\uhd.7z'
      ArtifactName: 'uhd.7z'
      publishLocation: 'Container'
    displayName: 'Publish UHD Artifacts'

  - script: |
      echo Install QT
      cd $(Build.SourcesDirectory)
      python -m pip install aqtinstall
      python -m aqt install 5.13.1 windows desktop win64_msvc2017_64 -m qtcore qtgui qtxml qtwidgets
      call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
      echo Downloading and Configure QWT
      choco install -y svn
      svn export svn://svn.code.sf.net/p/qwt/code/branches/qwt-6.1 
      cd qwt-6.1
      call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
      $(Build.SourcesDirectory)\\5.13.1\\msvc2017_64\\bin\\qmake qwt.pro
      nmake
      nmake install
      cd $(Build.SourcesDirectory)
      7z a -t7z Qwt_6_1_5.7z C:\\Qwt-6.1.5-svn
    displayName: 'Build QWT'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)\Qwt_6_1_5.7z'
      ArtifactName: 'Qwt_6_1_5.7z'
      publishLocation: 'Container'
    displayName: 'Publish QWT Artifacts'

  - script: |
      echo Collecting built dependencies
      cd $(Build.SourcesDirectory)
      mkdir prebuilt
      cd prebuilt
      mkdir C:\deps
      echo "---LOG4CPP---"
      wget https://anaconda.org/conda-forge/log4cpp/1.1.3/download/win-64/log4cpp-1.1.3-h6538335_1001.tar.bz2 -q -O "log4cpp.tar.bz2"
      mkdir C:\deps\log4cpp
      tar -C C:\deps\log4cpp -xf log4cpp.tar.bz2
      rm log4cpp.tar.bz2
      7z a -t7z log4cpp.7z C:\deps\log4cpp
      echo "---MPIR---"
      wget https://anaconda.org/anaconda/mpir/3.0.0/download/win-64/mpir-3.0.0-hec2e145_1.tar.bz2 -q -O "mpir.tar.bz2"
      mkdir C:\deps\mpir
      tar -C C:\deps\mpir -xf mpir.tar.bz2
      rm mpir.tar.bz2
      7z a -t7z mpir.7z C:\deps\mpir
      echo "---SWIG---"
      wget https://sourceforge.net/projects/swig/files/swigwin/swigwin-3.0.8/swigwin-3.0.8.zip -q -O "swig.zip"
      mkdir C:\deps\swig
      unzip -qq swig.zip -d C:\deps\swig\
      7z a -t7z swig.7z C:\deps\swig
      echo "---GTK---"
      wget https://ci.appveyor.com/api/buildjobs/v8mpwb84x5swl64r/artifacts/gvsbuild-vs15-x64.tar.gz -q -O "gtk.tar.gz"
      mkdir C:\deps\gtk
      tar -C C:\deps\gtk -xf gtk.tar.gz
      rm gtk.tar.gz
      mv C:\\deps\\gtk\\release C:\\deps\\gvsbuild
      7z a -t7z gvsbuild.7z C:\deps\gvsbuild      
    displayName: 'Collect built dependencies'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)\prebuilt'
      ArtifactName: 'PreBuilt'
      publishLocation: 'Container'
    displayName: 'Publish PreBuilt Artifacts'

  - script: |
      echo Collecting Aritfacts
      mkdir "$(Build.SourcesDirectory)\all"
      cp "$(Build.SourcesDirectory)\Qwt_6_1_5.7z" "$(Build.SourcesDirectory)\all"
      cp "$(Build.SourcesDirectory)\boost.7z" "$(Build.SourcesDirectory)\all"
    displayName: 'Collect Artifacts For Deploy'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.SourcesDirectory)\all'
      artifact: 'gr_win_deps'
      publishLocation: 'pipeline'
    displayName: 'Publish All Artifacts To Pipeline'

