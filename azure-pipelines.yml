# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

#- script: |
#    echo Downloading and Configure Boost
#    choco install -y wget
#    wget https://downloads.sourceforge.net/project/boost/boost/1.70.0/boost_1_70_0.zip?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fboost%2Ffiles%2Fboost%2F1.70.0%2Fboost_1_70_0.zip%2Fdownload&ts=1580705417 -q -O "boost_1_70_0.zip"
#    ren boost* boost_1_70_0.zip
#    unzip -q boost_1_70_0.zip
#    mkdir boost_out
#    SET OUTPUT="%CD%\boost_out"
#    cd boost_1_70_0
#    bootstrap.bat && b2 --build-type=complete --abbreviate-paths architecture=x86 address-model=64 install --prefix=%OUTPUT% -j2
#  displayName: 'Build Boost'

#- task: PublishBuildArtifacts@1
#  inputs:
#    PathtoPublish: '$(Build.SourcesDirectory)\boost_out'
#    ArtifactName: 'boost_build'
#    publishLocation: 'Container'
#  displayName: 'Publish Boost Artifacts'

- script: |
    echo Install QT
    pwd
    cd $(Build.SourcesDirectory)
    pwd
    echo "$(Build.BinariesDirectory)\\Qt"
    mkdir "$(Build.BinariesDirectory)\\Qt"
    dir
    python -m pip install aqtinstall
    python -m aqt install 5.13.1 windows desktop win64_msvc2017_64 -m qtcore qtgui qtxml qtwidgets
    dir
    dir "$(Build.BinariesDirectory)\5.13.1"
    call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
    call "$(Build.BinariesDirectory)\\5.13.1\\bin\\qtenv2.bat"
    echo Downloading and Configure QWT
    choco install -y svn
    svn export svn://svn.code.sf.net/p/qwt/code/branches/qwt-6.1 
    SET PATH="%PATH%;%CD%\boost_out"
    call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
    
    cd qwt-6.1
  displayName: 'Build QWT'
